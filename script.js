// 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º Telegram WebApp API
const tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å—à–∏—Ä—è–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

// 2. –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const videoElement = document.getElementById('video');
const videoContainer = document.getElementById('video-container');
const messageElement = document.getElementById('message');

// 3. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –Ω–∞—á–∞–ª—Å—è –ª–∏ —Ç–∞–Ω–µ—Ü
let danceStarted = false;

// 4. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —Ç–∞–Ω–µ—Ü"
async function startDance() {
  // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
  messageElement.textContent = "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å. –ü–æ–¥–Ω–∏–º–∏—Ç–µ –ø—Ä–∞–≤—É—é —Ä—É–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–Ω—Ü–∞.";

  // 6. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–Ω–µ–π –∫–∞–º–µ—Ä–µ
  const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: "user" } });

  // 7. –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞–º–µ—Ä—É –∫ <video>
  videoElement.srcObject = stream;
  videoElement.onloadedmetadata = async () => {
    await videoElement.play(); // –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
    videoElement.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
  };

  // 8. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º MediaPipe Pose
  const pose = new Pose({
    locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose@0.5/${file}`
  });

  // 9. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
  pose.setOptions({
    modelComplexity: 1,
    smoothLandmarks: true,
    enableSegmentation: false,
    minDetectionConfidence: 0.5,
    minTrackingConfidence: 0.5
  });

  // 10. –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∑—ã
  pose.onResults(results => {
    if (!results.poseLandmarks) return;

    console.log("–ü–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", results.poseLandmarks);

    // 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–Ω—è—Ç–∏–µ –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏ ‚Äî –µ—Å–ª–∏ —Ç–∞–Ω–µ—Ü –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª—Å—è
    if (!danceStarted) {
      const rightWrist = results.poseLandmarks[16];
      const rightShoulder = results.poseLandmarks[12];

      if (rightWrist.y < rightShoulder.y) {
        danceStarted = true;
        onDanceStart(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–Ω–µ—Ü
      }
    }
  });

  // 12. –ö–∞–º–µ—Ä–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –≤ MediaPipe Pose
  const camera = new Camera(videoElement, {
    onFrame: async () => {
      await pose.send({ image: videoElement });
    },
    width: 640,
    height: 480
  });

  camera.start(); // 13. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–º–µ—Ä—É
}

// 14. –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–Ω—è–ª —Ä—É–∫—É
function onDanceStart() {
  messageElement.textContent = ""; // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

  // –£–º–µ–Ω—å—à–∞–µ–º –≤–∏–¥–µ–æ –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª
  videoContainer.style.position = "fixed";
  videoContainer.style.width = "160px";
  videoContainer.style.height = "120px";
  videoContainer.style.bottom = "20px";
  videoContainer.style.right = "20px";
  videoContainer.style.zIndex = "1000";
  videoContainer.style.border = "2px solid #4CAF50";
  videoContainer.style.borderRadius = "10px";

  videoElement.style.width = "100%";
  videoElement.style.height = "100%";

  console.log("–¢–∞–Ω–µ—Ü –Ω–∞—á–∞–ª—Å—è! üéâ");
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–¥—Å—á—ë—Ç –æ—á–∫–æ–≤, –º—É–∑—ã–∫—É –∏ —Ç.–¥.
}

  // 12. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–º–µ—Ä—É
  camera.start();
}
